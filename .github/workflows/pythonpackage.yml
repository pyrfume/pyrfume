name: Python package

on: [push]

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Load pip cache if exists
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: ${{ runner.os }}-pip
      - name: Install linters
        run: python -m pip install black flake8 isort
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Lint with black
        run: black . --check
      - name: Lint with isort
        run: isort .

  testing:

    strategy:
      fail-fast: true
      max-parallel: 4
      matrix:
        os-version: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.6.2", "3.7", "3.8", "3.9", "3.10"]

    needs: linting
    runs-on: ${{ matrix.os-version }}

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and configure poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies if cache doesn't exist
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Install pyrfume
      run: poetry install --no-interaction
    - name: Run tests
      run: python -m pyrfume.unit_test 

