name: Python package

on: [push]

jobs:
  lint-test:

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        os-version: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.7", "3.8", "3.9"]

    runs-on: ${{ matrix.os-version }}

    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Add to system path
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Install and configure poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies if cache doesn't exist
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Install pyrfume
      run: poetry install --no-interaction
    - name: Run linting
      run: |
        # stop the build if there are python syntax errors or undefined names
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        poetry run black . --check
        poetry run isort .
    - name: Run tests
      run: poetry run python -m pyrfume.unit_test 

